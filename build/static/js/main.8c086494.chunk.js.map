{"version":3,"sources":["App.js","index.js"],"names":["App","useState","persons","setPersons","newName","setNewName","newKeyword","setNewKeyword","showAll","setShowAll","useEffect","console","log","axios","get","then","response","data","length","Person","person","toggleImportance","label","important","name","onClick","addName","event","preventDefault","nameObject","map","indexOf","alert","post","concat","personsToShow","filter","includes","onSubmit","value","onChange","target","type","id","url","find","n","changedPerson","put","note","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"uKA6HeA,EA1HH,WAKZ,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACNC,QAAQC,IAAI,UACZC,IACCC,IAAI,iCACJC,MAAK,SAAAC,GACFL,QAAQC,IAAI,qBACZT,EAAWa,EAASC,WAEzB,IACHN,QAAQC,IAAI,SAAUV,EAAQgB,OAAQ,SAEtC,IAAMC,EAAS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,iBAChBC,EAAQF,EAAOG,UACjB,qBAAuB,iBAE3B,OACE,+BACGH,EAAOI,KACR,wBAAQC,QAASJ,EAAjB,SAAoCC,QAkBtCI,EAAU,SAACC,GACjBA,EAAMC,iBACN,IAAMC,EAAa,CACnBL,KAAMpB,GAWFO,QAAQC,IAAI,qCAAsCR,GAClDF,EAAQ4B,KAAI,SAAAV,GAAM,OAAIA,EAAOI,QAAMO,QAAQ3B,IAAY,GAEvDO,QAAQC,IAAI,sBACZoB,MAAM5B,EAAU,mCAEhBS,IACCoB,KAAK,gCAAiCJ,GACtCd,MAAK,SAAAC,GACFL,QAAQC,IAAI,uBAAwBI,GACtCb,EAAWD,EAAQgC,OAAOlB,EAASC,OACnCZ,EAAW,QAiBX8B,EAAgBjC,EAAQkC,QAAO,SAAAhB,GACrC,OAAOA,EAAOI,KAAKa,SAAS/B,MAK5B,OAFAK,QAAQC,IAAI,8BAA+BuB,EAAe,oBAAkB7B,GAG5E,gCACA,8CACA,sBAAMgC,SAAUZ,EAAhB,SACA,gDACa,uBAAOa,MAAOjC,EAAYkC,SAhBZ,SAACb,GAC5BhB,QAAQC,IAAIe,EAAMc,OAAOF,OACzBhC,EAAcoB,EAAMc,OAAOF,eAiB3B,yCACA,uBAAMD,SAAUZ,EAAhB,UACA,uBAAOa,MAAOnC,EACdoC,SA3ByB,SAACb,GAC1BhB,QAAQC,IAAIe,EAAMc,OAAOF,OACzBlC,EAAWsB,EAAMc,OAAOF,UA0BxB,yBAAQG,KAAK,SAASjB,QAAS,kBAAMhB,GAAYD,IAAjD,kBACgBA,EAAU,YAAc,YAEvC2B,EAAcL,KAAI,SAAAV,GAAM,OAAI,6BAAKA,EAAOI,UACxCtB,EAAQ4B,KAAI,SAAAV,GAAM,OACT,cAACD,EAAD,CAEEC,OAAQA,EAAOI,KACfH,iBAAkB,kBAjFH,SAACsB,GACpBhC,QAAQC,IAAI,iBAAmB+B,EAAK,wBACpC,IAAMC,EAAG,wCAAoCD,GACvCvB,EAASlB,EAAQ2C,MAAK,SAAAC,GAAC,OAAIA,EAAEH,KAAOA,KACpCI,EAAa,2BAAQ3B,GAAR,IAAgBG,WAAYH,EAAOG,YAEtDV,IAAMmC,IAAIJ,EAAKG,GAAehC,MAAK,SAAAC,GAC/Bb,EAAWD,EAAQ4B,KAAI,SAAAmB,GAAI,OAAI7B,EAAOuB,KAAOA,EAAKvB,EAASJ,EAASC,YA0E5CiC,CAAmB9B,EAAOuB,MAF7CvB,EAAOuB,WC7GxBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8c086494.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst App = () => {\n    // esim. useState = se mitä tekstikentässä näkyy alussa. \n    //newKeyword = se mitä tekstikentässä näkyy lopussa (kun painaa enteriä).\n    //setNewKeyword = se mitä tekstikentässä lukee milloinkin.\n    // esim. useState([])\nconst [persons, setPersons] = useState([]) \nconst [newName, setNewName] = useState('')\nconst [newKeyword, setNewKeyword] = useState('')\nconst [showAll, setShowAll] = useState(true)\n\nuseEffect(() => {    \n    console.log('effect')    \n    axios      \n    .get('http://localhost:3002/persons')      \n    .then(response => {        \n        console.log('promise fulfilled')        \n        setPersons(response.data)      \n    })  \n}, [])  \nconsole.log('render', persons.length, 'notes')\n\nconst Person = ({ person, toggleImportance }) => {\n    const label = person.important\n      ? 'make not important' : 'make important'\n  \n    return (\n      <li>\n        {person.name} \n        <button onClick={toggleImportance}>{label}</button>\n      </li>\n    )\n  }\n\nconst toggleImportanceOf = (id) => {\n        console.log('importance of ' + id + ' needs to be toggled')\n        const url = `http://localhost:3002/persons/${id}`\n        const person = persons.find(n => n.id === id)\n        const changedPerson = { ...person, important: !person.important }\n        \n        axios.put(url, changedPerson).then(response => {\n            setPersons(persons.map(note => person.id !== id ? person : response.data))\n          })\n        }\n        \n        \n\nconst addName = (event) => {\nevent.preventDefault()\nconst nameObject = {\nname: newName //<--Katso että vaihdat uuden listan elementin mukaiseksi!!!\n}\n\n// persons.map((person) => person.name).indexOf(newName)) === -1) \n// console.log(\"the text gets added\")\n//persons ja personsToShow on yksi ja sama persons-lista! \n// Vai onko niin että personsToShow muuttuu? Kyllä vain, \n// mutta se tapahtuisi vasta kun newKeywordilla on jokin arvo! \n// Kun filter-input on \"\", niin persons = personsToShow.\n\n\n    console.log('newName:n arvo ennen if-lausetta: ', newName)\nif (persons.map(person => person.name).indexOf(newName) > -1)\n{\n    console.log(\"alternative occurs\")\n    alert(newName + ' is already added to phonebook')\n} else {\n    axios\n    .post('http://localhost:3002/persons', nameObject)\n    .then(response => {\n        console.log('palvelimen vastaus: ', response)\n      setPersons(persons.concat(response.data))      \n      setNewName('')\n      //setPersons poistaa edellisen ja lisää uuden taulukon.     \n    }) \n}\n\n}\n\nconst handleNameChange = (event) => {\nconsole.log(event.target.value) \nsetNewName(event.target.value) \n}\n\nconst handleFilterChange = (event) => {\nconsole.log(event.target.value)\nsetNewKeyword(event.target.value)\n}\n\nconst personsToShow = persons.filter(person => {\nreturn person.name.includes(newKeyword) // listassa näytettävässä db.jsonin olion alkiossa täytyy \n// esiintyä kaikki ne merkit siinä järjestyksessä, miten ne esiintyvät newKeyword:ssä filter-kentässä. \n})\nconsole.log('persons to show palauttaa: ', personsToShow, 'newKeyword:llä', newKeyword)\n\nreturn (\n<div>\n<h2>Phonebookbbb</h2>\n<form onSubmit={addName}>\n<div>\nfilter with: <input value={newKeyword} onChange={handleFilterChange}/>\n</div>\n</form>\n<h2>Numbers</h2>\n<form onSubmit={addName}>\n<input value={newName}\nonChange={handleNameChange} /> \n<button type=\"submit\" onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }</button>\n</form>\n{personsToShow.map(person => <li>{person.name}</li>)}\n{persons.map(person => \n          <Person\n            key={person.id}\n            person={person.name} \n            toggleImportance={() => toggleImportanceOf(person.id)}/>)}\n        \n</div>\n) // Katso et addXxx (oletusarvoisen viestinlähetyksen estäjäfunktio) on mukana, heti lomakkeen alussa form-tagissa, koska muuten lähetettävä viesti ei mene mihinkään! (oletusarvoinen lähetys kai blokkaa lähetyksen?)\n// Katso myös että tapahtumankäsittelijä handleXxxChange on input-tagissa, koska muuten ei addXxx esiintyessä voi kirjoittaa mitään! (addXxx estää oletusarvoisen lähetyksen kirjoitustoiminnan, johon handleXxxChange tuo manuaalisen kirjoitustoiminnan tilalle...)\n// On myös tärkeätä että {taulukko.map(lista => {lista.elementti})} on kahden aaltosulun sisällä (yksi koko map-metodin ympärillä, toinen kutsuttavan olion elementin ympärillä)\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}